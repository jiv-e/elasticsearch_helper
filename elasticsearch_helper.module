<?php

/**
 * @file
 * This module provides tools to integrate elasticsearch with Drupal.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Query\QueryInterface;

/**
 * Implements hook_entity_insert().
 */
function elasticsearch_helper_entity_insert(EntityInterface $entity) {
  $config = \Drupal::config('elasticsearch_helper.settings');

  /** @var \Drupal\elasticsearch_helper\Plugin\ElasticsearchIndexManager $index_plugin_manager */
  $index_plugin_manager = \Drupal::service('plugin.manager.elasticsearch_index.processor');

  if ($config->get('defer_indexing')) {
    $index_plugin_manager->addToQueue($entity->getEntityTypeId(), $entity->id());
  }
  else {
    $index_plugin_manager->indexEntity($entity);
  }
}

/**
 * Implements hook_entity_update().
 */
function elasticsearch_helper_entity_update(EntityInterface $entity) {
  elasticsearch_helper_entity_insert($entity);
}

/**
 * Implements hook_entity_translation_delete().
 */
function elasticsearch_helper_entity_translation_delete(EntityInterface $entity) {
  /** @var \Drupal\elasticsearch_helper\Plugin\ElasticsearchIndexManager $index_plugin_manager */
  $index_plugin_manager = \Drupal::service('plugin.manager.elasticsearch_index.processor');
  $index_plugin_manager->deleteEntity($entity);
}

/**
 * Implements hook_entity_delete().
 */
function elasticsearch_helper_entity_delete(EntityInterface $entity) {
  elasticsearch_helper_entity_translation_delete($entity);
}

/**
 * Implements hook_modules_installed().
 */
function elasticsearch_helper_modules_installed($modules) {
  /** @var \Drupal\elasticsearch_helper\Plugin\ElasticsearchIndexManager $index_plugin_manager */
  $index_plugin_manager = \Drupal::service('plugin.manager.elasticsearch_index.processor');

  foreach ($index_plugin_manager->getDefinitions() as $plugin) {
    // If the plugin provider was just installed.
    if (in_array($plugin['provider'], $modules)) {
      // Setup indices for that plugin.
      $index_plugin_manager->createInstance($plugin['id'])->setup();
    }
  }
}

/**
 * Implements hook_module_preuninstall().
 */
function elasticsearch_helper_module_preuninstall($module) {
  /** @var \Drupal\elasticsearch_helper\Plugin\ElasticsearchIndexManager $index_plugin_manager */
  $index_plugin_manager = \Drupal::service('plugin.manager.elasticsearch_index.processor');

  foreach ($index_plugin_manager->getDefinitions() as $plugin) {
    // If the plugin provider is about to be uninstalled.
    if ($plugin['provider'] == $module) {
      // Drop indices for that plugin.
      $index_plugin_manager->createInstance($plugin['id'])->drop();
    }
  }
}

/**
 * Implements hook_elasticsearch_helper_reindex_entity_query_alter().
 */
function elasticsearch_helper_elasticsearch_helper_reindex_entity_query_alter(QueryInterface $query, $entity_type, $bundle = NULL) {
  // Do not restrict entity query based on user's permissions or node grants.
  // Generally all entities are considered to be re-indexed when
  // "drush elasticsearch-helper-reindex" command is run or
  // \Drupal\elasticsearch_helper\Plugin\ElasticsearchIndexManager::reindexEntities()
  // is executed.
  $query->accessCheck(FALSE);
}
